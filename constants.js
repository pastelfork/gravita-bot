const dotenv = require("dotenv");
dotenv.config();
const ethers = require("ethers");
const { ABI } = require("./abi");
const ETHERSCAN = {
  ETHEREUM: "https://etherscan.io",
  ARBITRUM: "https://arbiscan.io",
};

const ADDRESS = {
  ETHEREUM: {
    VESSEL_MANAGER_OPERATIONS: "0xc49B737fa56f9142974a54F6C66055468eC631d0",
    BORROWER_OPERATIONS: "0x2bCA0300c2aa65de6F19c2d241B54a445C9990E2",
    VESSEL_MANAGER: "0xdB5DAcB1DFbe16326C3656a88017f0cB4ece0977",
    ADMIN: "0x89F1ecCF2644902344db02788A790551Bb070351",
    PRICEFEED: "0x89F1ecCF2644902344db02788A790551Bb070351",
    // TOKENS: [
    //   { NAME: "RETH", ADDRESS: "0xae78736Cd615f374D3085123A210448E74Fc6393" },
    //   { NAME: "WSTETH", ADDRESS: "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0" },
    //   { NAME: "BLUSD", ADDRESS: "0xB9D7DdDca9a4AC480991865EfEf82E01273F79C3" },
    //   { NAME: "SWETH", ADDRESS: "0xf951E335afb289353dc249e82926178EaC7DEd78" },
    // ],
  },

  ARBITRUM: {
    VESSEL_MANAGER_OPERATIONS: "0x15f74458aE0bFdAA1a96CA1aa779D715Cc1Eefe4",
    VESSEL_MANAGER: "0x6AdAA3eBa85c77e8566b73AEfb4C2f39Df4046Ca",
    BORROWER_OPERATIONS: "0x89F1ecCF2644902344db02788A790551Bb070351",
    ADMIN: "0x4928c8F8c20A1E3C295DddBe05095A9aBBdB3d14",
    PRICEFEED: "0xF0e0915D233C616CB727E0b2Ca29ff0cbD51B66A",
    // TOKENS: [
    //   { NAME: "RETH", ADDRESS: "0xEC70Dcb4A1EFa46b8F2D97C310C9c4790ba5ffA8" },
    //   { NAME: "WSTETH", ADDRESS: "0x5979D7b546E38E414F7E9822514be443A4800529" },
    //   { NAME: "WETH", ADDRESS: "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1" },
    // ],
  },
};

const TOPICS = {
  VESSEL_CREATED:
    "0xc4acb8f55d18541d201c0e84984eacc725592d1043776db306c00720b2a503ff",
  LIQUIDATION:
    "0xa3f221854f649364e9a3bb384dd1ff938482664f4a0eac0f6e39a542f5193bd3",
  REDEMPTION: 
    "0x08b6f1ce3f9ab2722e8ea40c31a3e3a806a41702c5994f29af43dc0c1f2837df",
};

const FILTERS = {
  ETHEREUM: {
    VESSEL_CREATED: {
      address: ADDRESS["ETHEREUM"].BORROWER_OPERATIONS,
      topics: [TOPICS.VESSEL_CREATED],
    },
    LIQUIDATION: {
      address: ADDRESS["ETHEREUM"].VESSEL_MANAGER_OPERATIONS,
      topics: [TOPICS.LIQUIDATION]
    },
    REDEMPTION: {
      address: ADDRESS["ETHEREUM"].VESSEL_MANAGER_OPERATIONS,
      topics: [TOPICS.REDEMPTION]
    }
  },
  ARBITRUM: {
    VESSEL_CREATED: {
      address: ADDRESS["ARBITRUM"].BORROWER_OPERATIONS,
      topics: [TOPICS.VESSEL_CREATED],
    },
    LIQUIDATION: {
      address: ADDRESS["ARBITRUM"].VESSEL_MANAGER_OPERATIONS,
      topics: [TOPICS.LIQUIDATION]
    },
    REDEMPTION: {
      address: ADDRESS["ARBITRUM"].VESSEL_MANAGER_OPERATIONS,
      topics: [TOPICS.REDEMPTION]
    }
  },
};

const ENDPOINTS = {
  ETHEREUM: "https://eth-mainnet.g.alchemy.com/v2/" + process.env.ALCHEMY_KEY,
  ARBITRUM: "https://arb-mainnet.g.alchemy.com/v2/" + process.env.ALCHEMY_KEY,
};

// console.log(ENDPOINTS["ETHEREUM"])
const PROVIDERS = {
  ETHEREUM: new ethers.providers.JsonRpcProvider(ENDPOINTS["ETHEREUM"]),
  ARBITRUM: new ethers.providers.JsonRpcProvider(ENDPOINTS["ARBITRUM"]),
};

const CONTRACTS = {
  ETHEREUM: {
    VESSEL_MANAGER_OPERATIONS: new ethers.Contract(
      ADDRESS["ETHEREUM"].VESSEL_MANAGER_OPERATIONS,
      ABI.VESSEL_MANAGER_OPERATIONS,
      PROVIDERS["ETHEREUM"]
    ),
    VESSEL_MANAGER: new ethers.Contract(
      ADDRESS["ETHEREUM"].VESSEL_MANAGER,
      ABI.VESSEL_MANAGER,
      PROVIDERS["ETHEREUM"]
    ),
    BORROWER_OPERATIONS: new ethers.Contract(
      ADDRESS["ETHEREUM"].BORROWER_OPERATIONS,
      ABI.BORROWER_OPERATIONS,
      PROVIDERS["ETHEREUM"]
    ),
    ADMIN: new ethers.Contract(
      ADDRESS["ETHEREUM"].ADMIN,
      ABI.ADMIN,
      PROVIDERS["ETHEREUM"]
    ),
    PRICEFEED: new ethers.Contract(
      ADDRESS["ETHEREUM"].PRICEFEED,
      ABI.PRICEFEED,
      PROVIDERS["ETHEREUM"]
    ),
  },
  ARBITRUM: {
    VESSEL_MANAGER_OPERATIONS: new ethers.Contract(
      ADDRESS["ARBITRUM"].VESSEL_MANAGER_OPERATIONS,
      ABI.VESSEL_MANAGER_OPERATIONS,
      PROVIDERS["ARBITRUM"]
    ),
    VESSEL_MANAGER: new ethers.Contract(
      ADDRESS["ARBITRUM"].VESSEL_MANAGER,
      ABI.VESSEL_MANAGER,
      PROVIDERS["ARBITRUM"]
    ),
    BORROWER_OPERATIONS: new ethers.Contract(
      ADDRESS["ARBITRUM"].BORROWER_OPERATIONS,
      ABI.BORROWER_OPERATIONS,
      PROVIDERS["ARBITRUM"]
    ),
    ADMIN: new ethers.Contract(
      ADDRESS["ARBITRUM"].ADMIN,
      ABI.ADMIN,
      PROVIDERS["ARBITRUM"]
    ),
    PRICEFEED: new ethers.Contract(
      ADDRESS["ARBITRUM"].PRICEFEED,
      ABI.PRICEFEEDL2,
      PROVIDERS["ARBITRUM"]
    ),
  },
};
module.exports = { PROVIDERS, FILTERS, ADDRESS, CONTRACTS, ETHERSCAN, ABI };
